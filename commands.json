{
  "BF.RESERVE": {
    "summary": "Creates a new Bloom Filter",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "error_rate",
        "type": "double"
      },
      {
        "name": "capacity",
        "type": "integer"
      },
      {
        "name": "expansion",
        "type": "integer",
        "token": "EXPANSION",
        "optional": true
      },
      {
        "name": "nonscaling",
        "type": "pure-token",
        "token": "NONSCALING",
        "optional": true
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.ADD": {
    "summary": "Adds an item to a Bloom Filter",
    "complexity": "O(k), where k is the number of hash functions used by the last sub-filter",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.MADD": {
    "summary": "Adds one or more items to a Bloom Filter. A filter will be created if it does not exist",
    "complexity": "O(k * n), where k is the number of hash functions and n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.INSERT": {
    "summary": "Adds one or more items to a Bloom Filter. A filter will be created if it does not exist",
    "complexity": "O(k * n), where k is the number of hash functions and n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "capacity",
        "type": "integer",
        "token": "CAPACITY",
        "optional": true
      },
      {
        "name": "error",
        "type": "double",
        "token": "ERROR",
        "optional": true
      },
      {
        "name": "expansion",
        "type": "integer",
        "token": "EXPANSION",
        "optional": true
      },
      {
        "name": "nocreate",
        "token": "NOCREATE",
        "type": "pure-token",
        "optional": true
      },
      {
        "name": "nonscaling",
        "token": "NONSCALING",
        "type": "pure-token",
        "optional": true
      },
      {
        "name": "items",
        "token": "ITEMS",
        "type": "pure-token"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.EXISTS": {
    "summary": "Checks whether an item exists in a Bloom Filter",
    "complexity": "O(k), where k is the number of hash functions used by the last sub-filter",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.MEXISTS": {
    "summary": "Checks whether one or more items exist in a Bloom Filter",
    "complexity": "O(k * n), where k is the number of hash functions and n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.SCANDUMP": {
    "summary": "Begins an incremental save of the bloom filter",
    "complexity": "O(n), where n is the capacity",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "iterator",
        "type": "integer"
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.LOADCHUNK": {
    "summary": "Restores a filter previously saved using SCANDUMP",
    "complexity": "O(n), where n is the capacity",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "iterator",
        "type": "integer"
      },
      {
        "name": "data",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.INFO": {
    "summary": "Returns information about a Bloom Filter",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "single_value",
        "type": "oneof",
        "optional": true,
        "arguments": [
            {
              "name": "capacity",
              "type": "pure-token",
              "token": "CAPACITY"
            },
            {
              "name": "size",
              "type": "pure-token",
              "token": "SIZE"
            },
            {
              "name": "filters",
              "type": "pure-token",
              "token": "FILTERS"
            },
            {
              "name": "items",
              "type": "pure-token",
              "token": "ITEMS"
            },
            {
              "name": "expansion",
              "type": "pure-token",
              "token": "EXPANSION"
            }
        ]
      }
    ],
    "since": "1.0.0",
    "group": "bf"
  },
  "BF.CARD": {
    "summary": "Returns the cardinality of a Bloom filter",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.4.4",
    "group": "bf"
  },
  "CF.RESERVE": {
    "summary": "Creates a new Cuckoo Filter",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "capacity",
        "type": "integer"
      },
      {
        "name": "bucketsize",
        "type": "integer",
        "token": "BUCKETSIZE",
        "optional": true
      },
      {
        "name": "maxiterations",
        "type": "integer",
        "token": "MAXITERATIONS",
        "optional": true
      },
      {
        "name": "expansion",
        "type": "integer",
        "token": "EXPANSION",
        "optional": true
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.ADD": {
    "summary": "Adds an item to a Cuckoo Filter",
    "complexity": "O(k + i), where k is the number of sub-filters and i is maxIterations",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.ADDNX": {
    "summary": "Adds an item to a Cuckoo Filter if the item did not exist previously.",
    "complexity": "O(k + i), where k is the number of sub-filters and i is maxIterations",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.INSERT": {
    "summary": "Adds one or more items to a Cuckoo Filter. A filter will be created if it does not exist",
    "complexity": "O(n * (k + i)), where n is the number of items, k is the number of sub-filters and i is maxIterations",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "capacity",
        "type": "integer",
        "token": "CAPACITY",
        "optional": true
      },
      {
        "name": "nocreate",
        "token": "NOCREATE",
        "type": "pure-token",
        "optional": true
      },
      {
        "name": "items",
        "token": "ITEMS",
        "type": "pure-token"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.INSERTNX": {
    "summary": "Adds one or more items to a Cuckoo Filter if the items did not exist previously. A filter will be created if it does not exist",
    "complexity": "O(n * (k + i)), where n is the number of items, k is the number of sub-filters and i is maxIterations",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "capacity",
        "type": "integer",
        "token": "CAPACITY",
        "optional": true
      },
      {
        "name": "nocreate",
        "token": "NOCREATE",
        "type": "pure-token",
        "optional": true
      },
      {
        "name": "items",
        "token": "ITEMS",
        "type": "pure-token"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.EXISTS": {
    "summary": "Checks whether one or more items exist in a Cuckoo Filter",
    "complexity": "O(k), where k is the number of sub-filters",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.MEXISTS": {
    "summary": "Checks whether one or more items exist in a Cuckoo Filter",
    "complexity": "O(k * n), where k is the number of sub-filters and n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.DEL": {
    "summary": "Deletes an item from a Cuckoo Filter",
    "complexity": "O(k), where k is the number of sub-filters",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.COUNT": {
    "summary": "Return the number of times an item might be in a Cuckoo Filter",
    "complexity": "O(k), where k is the number of sub-filters",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.SCANDUMP": {
    "summary": "Begins an incremental save of the bloom filter",
    "complexity": "O(n), where n is the capacity",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "iterator",
        "type": "integer"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.LOADCHUNK": {
    "summary": "Restores a filter previously saved using SCANDUMP",
    "complexity": "O(n), where n is the capacity",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "iterator",
        "type": "integer"
      },
      {
        "name": "data",
        "type": "string"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CF.INFO": {
    "summary": "Returns information about a Cuckoo Filter",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "1.0.0",
    "group": "cf"
  },
  "CMS.INITBYDIM": {
    "summary": "Initializes a Count-Min Sketch to dimensions specified by user",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "width",
        "type": "integer"
      },
      {
        "name": "depth",
        "type": "integer"
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "CMS.INITBYPROB": {
    "summary": "Initializes a Count-Min Sketch to accommodate requested tolerances.",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "error",
        "type": "double"
      },
      {
        "name": "probability",
        "type": "double"
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "CMS.INCRBY": {
    "summary": "Increases the count of one or more items by increment",
    "complexity": "O(n) where n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "items",
        "type": "block",
        "multiple": true,
        "arguments": [
          {
            "name": "item",
            "type": "string"
          },
          {
            "name": "increment",
            "type": "integer"
          }
        ]
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "CMS.QUERY": {
    "summary": "Returns the count for one or more items in a sketch",
    "complexity": "O(n) where n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "CMS.MERGE": {
    "summary": "Merges several sketches into one sketch",
    "complexity": "O(n) where n is the number of sketches",
    "arguments": [
      {
        "name": "destination",
        "type": "key"
      },
      {
        "name": "numKeys",
        "type": "integer"
      },
      {
        "name": "source",
        "type": "key",
        "multiple": true
      },
      {
        "name": "weight",
        "type": "block",
        "optional": true,
        "arguments": [
          {
            "name": "weights",
            "token": "WEIGHTS",
            "type": "pure-token"
          },
          {
            "name": "weight",
            "type": "double",
            "multiple": true
          }
        ]
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "CMS.INFO": {
    "summary": "Returns information about a sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.0.0",
    "group": "cms"
  },
  "TOPK.RESERVE": {
    "summary": "Initializes a TopK with specified parameters",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "topk",
        "type": "integer"
      },
      {
        "name": "params",
        "type": "block",
        "optional": true,
        "arguments": [
          {
            "name": "width",
            "type": "integer"
          },
          {
            "name": "depth",
            "type": "integer"
          },
          {
            "name": "decay",
            "type": "double"
          }
        ]
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.ADD": {
    "summary": "Increases the count of one or more items by increment",
    "complexity": "O(n * k) where n is the number of items and k is the depth",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "items",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.INCRBY": {
    "summary": "Increases the count of one or more items by increment",
    "complexity": "O(n * k * incr) where n is the number of items, k is the depth and incr is the increment",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "items",
        "type": "block",
        "multiple": true,
        "arguments": [
          {
            "name": "item",
            "type": "string"
          },
          {
            "name": "increment",
            "type": "integer"
          }
        ]
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.QUERY": {
    "summary": "Checks whether one or more items are in a sketch",
    "complexity": "O(n) where n is the number of items",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.COUNT": {
    "summary": "Return the count for one or more items are in a sketch",
    "complexity": "O(n) where n is the number of items",
    "deprecated_since": "2.4",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "item",
        "type": "string",
        "multiple": true
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.LIST": {
    "summary": "Return full list of items in Top K list",
    "complexity": "O(k) where k is the value of top-k",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "withcount",
        "token": "WITHCOUNT",
        "type": "pure-token",
        "optional": true
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TOPK.INFO": {
    "summary": "Returns information about a sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.0.0",
    "group": "topk"
  },
  "TDIGEST.CREATE": {
    "summary": "Allocates memory and initializes a new t-digest sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "compression",
        "type": "integer",
        "token": "COMPRESSION",
        "optional": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.RESET": {
    "summary": "Resets a t-digest sketch: empty the sketch and re-initializes it.",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.ADD": {
    "summary": "Adds one or more observations to a t-digest sketch",
    "complexity": "O(N) , where N is the number of samples to add",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "values",
        "type": "block",
        "multiple": true,
        "arguments": [
          {
            "name": "value",
            "type": "double"
          }
        ]
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.MERGE": {
    "summary": "Merges multiple t-digest sketches into a single sketch",
    "complexity": "O(N*K), where N is the number of centroids and K being the number of input sketches",
    "arguments": [
      {
        "name": "destination-key",
        "type": "key"
      }
      ,
      {
        "name": "numkeys",
        "type": "integer"
      },
      {
        "name": "source-key",
        "type": "key",
        "multiple": true
      },
      {
        "name": "config",
        "type": "block",
        "optional": true,
        "arguments": [
          {
            "name": "compression",
            "token": "COMPRESSION",
            "type": "pure-token"
          },
          {
            "name": "compression",
            "type": "integer"
          }
        ]
      },
      {
        "name": "override",
        "type": "pure-token",
        "token": "OVERRIDE",
        "optional": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.MIN": {
    "summary": "Returns the minimum observation value from a t-digest sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.MAX": {
    "summary": "Returns the maximum observation value from a t-digest sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.QUANTILE": {
    "summary": "Returns, for each input fraction, an estimation of the value (floating point) that is smaller than the given fraction of observations",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "quantile",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.CDF": {
    "summary": "Returns, for each input value, an estimation of the fraction (floating-point) of (observations smaller than the given value + half the observations equal to the given value)",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "value",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.TRIMMED_MEAN": {
    "summary": "Returns an estimation of the mean value from the sketch, excluding observation values outside the low and high cutoff quantiles",
    "complexity": "O(N) where N is the number of centroids",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "low_cut_quantile",
        "type": "double"
      },
      {
        "name": "high_cut_quantile",
        "type": "double"
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.RANK": {
    "summary": "Returns, for each input value (floating-point), the estimated rank of the value (the number of observations in the sketch that are smaller than the value + half the number of observations that are equal to the value)",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "value",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.REVRANK": {
    "summary": "Returns, for each input value (floating-point), the estimated reverse rank of the value (the number of observations in the sketch that are larger than the value + half the number of observations that are equal to the value)",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "value",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.BYRANK": {
    "summary": "Returns, for each input rank, an estimation of the value (floating-point) with that rank",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "rank",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.BYREVRANK": {
    "summary": "Returns, for each input reverse rank, an estimation of the value (floating-point) with that reverse rank",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      },
      {
        "name": "reverse_rank",
        "type": "double",
        "multiple": true
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  },
  "TDIGEST.INFO": {
    "summary": "Returns information and statistics about a t-digest sketch",
    "complexity": "O(1)",
    "arguments": [
      {
        "name": "key",
        "type": "key"
      }
    ],
    "since": "2.4.0",
    "group": "tdigest"
  }
}
